#!/usr/bin/bash

# Abbreviations used
# ------------------
# nap : non active pane
# ap  : active pane

vifmpane()
{
    # local -x TERM=xterm-direct  # need for truecolor support
    # emulate -L zsh

    local CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/vifm"
    [ ! -d $CACHE_DIR ] && mkdir -p $CACHE_DIR


    if [ -x $(command -v vifmrun) ]
    then
        local vifm_exe=$(command -v vifmrun)
    elif [ -x $(command -v vifm) ]
    then
        local vifm_exe=$(command -v vifm)
    else
        printf "vifm isn't installed on your system!\n"
        exit 1
    fi

    if [ ! -x $(command -v jq) ]
    then
        printf "jq isn't installed on your system!\n"
        exit 1
    fi

    local temp_file="$(mktemp -t "vifm_cd.XXXXXXXXXX")"

    local nap_cache="$CACHE_DIR/non_active_pane"

    # If file exists and has size greater than zero.
    if [ -s $nap_cache ]
    then
        local nap_path=$(head -1 $nap_cache)
        local nap_index=$(tail -1 $nap_cache)
        case $nap_index in
            0)
                local first_pane="$nap_path"
                local second_pane="$PWD"
                ;;
            1)
                local first_pane="$PWD"
                local second_pane="$nap_path"
                ;;
            *)
                local first_pane="$PWD"
                local second_pane="$PWD"
        esac
        unset nap_index nap_path

        $vifm_exe "$first_pane" "$second_pane" --choose-dir=$temp_file $@
    else
        $vifm_exe "$PWD" --choose-dir=$temp_file $@
    fi
    local return_value="$?"

    local vifminfo="$HOME/.config/vifm/vifminfo.json"

    # # For debugging purposes:
    # jq '{gtabs, "active-gtab": (."active-gtab" // 0) }' $vifminfo \
    # | jq 'del(.gtabs[].panes[].ptabs[].history)' \
    # > $CACHE_DIR/last_locations.json

    if [ -f "$temp_file" ]
    then
        local chosen_dir="$(cat -- "$temp_file")"
        command rm -f "$temp_file"

        if [ -d "$chosen_dir" ]
        then
            # Get last locations on each pane on active tab.
            local last_locations=$(
                # If there are several global tabs we consider only active tab.
                # And so with pane tabs.
                jq '.' $vifminfo \
                | jq 'if ."active-gtab" then .gtabs[."active-gtab"] else .gtabs[] end' \
                | jq 'del(.panes[].ptabs[].history)' \
                | jq '.panes[]' \
                | jq 'if ."active-ptab" then .ptabs[."active-ptab"] else .ptabs[] end' \
                | jq '."last-location"' \
                | jq --slurp 'to_entries'
            )

            # Find last non active pane.
            local non_active_pane=$(
                echo $last_locations \
                | jq --arg x "$chosen_dir" '.[] | select(.value != $x) | .key'
            )

            # If $non_active_pane variable is empty, that means that on both
            # panes the same path is set.  In this case, we choose the zero pane.
            if [[ -z $non_active_pane ]]; then non_active_pane=0; fi

            # If $non_active_pane index is neither 0 nor 1, that means that
            # something goes wrong (for example we leave vifm without
            # saving state by :qa!). In this case we do nothing: doesn't save
            # any data.
            if [[ $non_active_pane == "0" || $non_active_pane == "1" ]]
            then
                local path_on_non_active_pane=$(
                    echo $last_locations \
                    | jq -r --arg n $non_active_pane '.[$n|tonumber].value'
                )

                echo $path_on_non_active_pane > $nap_cache
                echo $non_active_pane >> $nap_cache
            fi

            if [ "$chosen_dir" != "$PWD" ]; then cd -- "$chosen_dir"; fi
        fi
        return $return_value
    fi
}

vifmpane "$@"
